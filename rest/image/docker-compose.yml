version: '3.9'

services:
    pgadmin:
        container_name: pgadmin
        image: dpage/pgadmin4
        env_file:
            - .env
        environment:
            - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
            - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
        ports:
            - "5050:80"
        restart: unless-stopped
        volumes:
            - pgadmin:/root/.pgadmin
        networks:
            - new

    imageservice:
        container_name: service_image
        build:
            dockerfile: dockerfile
            context: ./image
        ports:
            - "1112:1112"
        env_file:
            - .env
        environment:
            - SERVER_HOST=0.0.0.0
            - ENV=prod
        tty: true
        restart: always
        volumes:
            - ./image/logs:/logs
        networks:
            - new
        depends_on:
            - imagedb

    imagedb:
        container_name: db_image
        image: postgres:latest
        env_file:
            - .env
        environment:
            - POSTGRES_USER=${IMAGE_POSTGRES_USER}
            - POSTGRES_PASSWORD=${IMAGE_POSTGRES_PASSWORD}
            - POSTGRES_DB=${IMAGE_POSTGRES_DB}
            - POSTGRES_HOST=${IMAGE_POSTGRES_HOST}
            - POSTGRES_SSLMODE=${IMAGE_POSTGRES_SSLMODE}
        ports:
            - "8083:5432"
        restart: always
        volumes:
            - database-data:/var/lib/postgresql/user/data/
        networks:
            new:
                aliases:
                    - database

    image_migrate:
        container_name: migrate_image
        image: migrate/migrate
        restart: on-failure
        networks:
            - new
        volumes:
            - ./image/migrations:/image/migrations
        command:
            [
                "-path",
                "image/migrations",
                "-database",
                "postgres://user:userpass@imagedb:5432/imagedb?sslmode=disable",
                "up"
            ]
        links:
            - imagedb
        depends_on:
            - imagedb

    imagedbtest:
        container_name: test_db_image
        image: postgres:latest
        env_file:
            - .env
        environment:
            - POSTGRES_USER=${TEST_IMAGE_POSTGRES_USER}
            - POSTGRES_PASSWORD=${TEST_IMAGE_POSTGRES_PASSWORD}
            - POSTGRES_DB=${TEST_IMAGE_POSTGRES_DB}
            - POSTGRES_HOST=${TEST_IMAGE_POSTGRES_HOST}
            - POSTGRES_SSLMODE=${TEST_IMAGE_POSTGRES_SSLMODE}
        ports:
            - "8084:5432"
        restart: unless-stopped
        volumes:
            - database-test:/var/lib/test-date/image/data/
        networks:
            new:
                aliases:
                    - database

    test_image_migrate:
        container_name: test_migrate_image
        image: migrate/migrate
        restart: on-failure
        networks:
            - new
        volumes:
            - ./image/migrations:/image/migrations
        command:
            [
                "-path",
                "image/migrations",
                "-database",
                "postgres://user:userpass@imagedbtest:5432/imagedbtest?sslmode=disable",
                "up"
            ]
        links:
            - imagedbtest
        depends_on:
            - imagedbtest
networks:
    new:
        driver: bridge

volumes:
    api: null
    database-data: null
    pgadmin: null
    database-test: null
