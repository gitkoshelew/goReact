{
	"info": {
		"_postman_id": "3c9e4401-6c35-4c7f-96d1-e97fce24925e",
		"name": "goreact",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Create",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2Nlc3NfdXVpZCI6IjQyNTk4NGRhLWQ0NTgtNDY5NC05YmMyLTUzYjBiM2I4OTBjYyIsImF1dGhvcml6ZWQiOnRydWUsImV4cCI6MTY0MDczODQ5OSwidXNlcl9pZCI6NH0.ds8JjA_oi70ao5phJ3hR452x8Oif0CZ4r0W4JBk-zt8",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "",
								"type": "default",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"email\": \"ivdadan@mail.ru\",\r\n        \"password\": \"password\",\r\n        \"role\": \"client\",\r\n        \"name\": \"Ivasdaan\",\r\n        \"sName\": \"Ivasadasdnov\",\r\n        \"mName\": \"Ivanoasdavich\",\r\n        \"sex\": \"male\",\r\n        \"birthDate\": \"2000-01-01T00:00:00Z\",\r\n        \"address\": \"Minsk Pr. Nezavisimosti 22-222\",\r\n        \"phone\": \"+375-29-154-89-33\",\r\n        \"photo\": \"PhotoURL...\"\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"user"
							]
						},
						"description": "Create user and save into USERS table in DB\n\nPassword will be encrypred in server and then will be saved in DB\n\n### Response data:\n\n400 - http.StatusBadRequest\n\n500 - http.StatusInternalServerError\n\nif OK:\n\n201 - http.StatusCreated\n\n{\n\nuserID: \"int\"\n\n}"
					},
					"response": []
				},
				{
					"name": "Get all",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"users"
							]
						},
						"description": "Send a request to server to get all Users from DB.\n\n### Response data:\n\n400 - http.StatusBadRequest\n\n500 - http.StatusInternalServerError\n\nif OK:\n\n200 - http.StatusOK\n\nJSON massieve:\n\n\\[\n\n{   \n\n\"userId\": int,   \n\n\"email\": string,   \n\n\"role\": string,    \n\n\"verified\": bool,          \n\n\"name\": string,          \n\n\"sName\": string,             \n\n\"mName\": string,               \n\n\"sex\": string,   \n\n\"birthDate\": time.Time,     # format: \"2111-01-01\" #   \n\n\"address\": string,             \n\n\"phone\": string,             \n\n\"photo\": string            \n\n},\n\n{user JSON...},\n\n{user JSON...},\n\n...\n\n\\]"
					},
					"response": []
				},
				{
					"name": "Get by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/user/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"user",
								"2"
							]
						},
						"description": "Return user from DB by userID. ID need to be set in URL params api/user/{id}\n\n### Response data:\n\n400 - http.StatusBadRequest\n\n500 - http.StatusInternalServerError\n\nif OK:\n\n200 - http.StatusOK\n\nJSON:\n\n{\n\n\"userId\": int,\n\n\"email\": string,\n\n\"role\": string,\n\n\"verified\": bool,\n\n\"name\": string,\n\n\"sName\": string,\n\n\"mName\": string,\n\n\"sex\": string,\n\n\"birthDate\": time.Time, # format: \"2111-01-01\" #\n\n\"address\": string,\n\n\"phone\": string,\n\n\"photo\": string\n\n}"
					},
					"response": []
				}
			],
			"description": "## User's struct:\n\n| Field | type | JSON |\n| --- | --- | --- |\n| UserID | int | userId |\n| Email | string | \"email\" |\n| Password | string | \"password\" |\n| Role | string | \"role\" |\n| Verified | bool | \"verified\" |\n| Name | string | \"name |\n| Surname | string | \"sName\" |\n| MiddleName | string | \"mName\" |\n| Sex | string | \"sex\" |\n| DateOfBirth | time.Time | \"birthDate\" |\n| Address | string | \"address\" |\n| Phone | string | \"phone |\n| Photo | string | \"photo\" |"
		},
		{
			"name": "Authentiction",
			"item": [
				{
					"name": "Registration",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"email\": \"olga@gmail.com\",\r\n        \"password\": \"password\",\r\n        \"role\": \"client\",\r\n        \"name\": \"Ivasdaan\",\r\n        \"sName\": \"Ivasadasdnov\",\r\n        \"mName\": \"Ivanoasdavich\",\r\n        \"sex\": \"male\",\r\n        \"birthDate\": \"2000-01-01T00:00:00Z\",\r\n        \"address\": \"Minsk Pr. Nezavisimosti 22-222\",\r\n        \"phone\": \"+375-29-154-89-33\",\r\n        \"photo\": \"PhotoURL...\"\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/registration",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"registration"
							]
						},
						"description": "Create user. Giving back ID for user. If registration was successufull send email verification to user. If verification will be done changes verifiend field to true\n\n## Request data:\n\nJSON\n\n{\n\n\"email\": string,\n\n\"password\": string,\n\n\"role\": string, NOT NULL # \"client\", \"employee\", \"anonymous\" #\n\n\"verified\": bool, NOT NULL\n\n\"name\": string, NOT NULL\n\n\"sName\": string, NOT NULL\n\n\"mName\": string,\n\n\"sex\": string, NOT NULL\n\n\"birthDate\": time.Time, NOT NULL # format: \"2111-01-01\" #\n\n\"address\": string,\n\n\"phone\": string, NOT NULL\n\n\"photo\": string\n\n}\n\n### Response data:\n\n400 - http.StatusBadRequest\n\n500 - http.StatusInternalServerError\n\nif OK:\n\n201- http.StatusCreated\n\nJSON:\n\n{\n\n\"userId\": int\n\n}"
					},
					"response": []
				},
				{
					"name": "Login",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2Nlc3NfdXVpZCI6Ijg5Nzk5MDhkLWYzMGItNDJiMi1iYmE4LWM5N2E0OTk4ZjZjMiIsImF1dGhvcml6ZWQiOnRydWUsImV4cCI6MTY0MTQyMzExMCwicm9sZSI6ImVtcGxveWVlIiwidXNlcl9pZCI6NH0.uFMa30dqQvqWv0Hl1xsvBLacaA2YAXiyZJt_mepo70Q",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"olga@mail.ru\",\r\n    \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"login"
							]
						},
						"description": "SImple login endpoint. Checks first if usser already logged in. If true return msg by response writer.\n\n### Request data:\n\n{\n\nEmail string NOT NULL\n\nPassword string NOT NULL\n\n}\n\nResponse data:\n\n400 - StatusBadRequest\n\n422- StatusUnprocessableEntity\n\n500 - StatusInternalServerError\n\nif OK:\n\n200 - http.StatusOK\n\nCookie: Refresh-Token\n\nHeader: access_token\n\n#### JSON:\n\n{\n\n\"userId\": int,\n\n\"email\": string,\n\n\"role\": string,\n\n\"verified\": bool,\n\n\"name\": string,\n\n\"sName\": string,\n\n\"mName\": string,\n\n\"sex\": string,\n\n\"birthDate\": time.Time, # format: \"2111-01-01\" #\n\n\"address\": string,\n\n\"phone\": string,\n\n\"photo\": string\n\n}"
					},
					"response": []
				},
				{
					"name": "Me",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2Nlc3NfdXVpZCI6IjlmOTIyNzgxLWQ3OTItNGI4OS04YTUyLTI1OTEyZDM1ZTlhNSIsImF1dGhvcml6ZWQiOnRydWUsImV4cCI6MTY0MTkyMTQ0MCwicm9sZSI6ImVtcGxveWVlIiwidXNlcl9pZCI6NH0.2Z9SDEPyoZ5cRj-KHzQ-JMo3vbY9jle15k0oIcfnAZ8",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/me",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"me"
							]
						},
						"description": "Who Am I endpoin. Checks if user is authorized by using access token. If true giving back userId and user role. if false send msg that user is unauthorized\n\n### Request data:\n\nAuthorization Bearer Token\n\n### Response data:\n\n401-StatusUnauthorized\n\n200- http.StatusOK  \n{\n\n\"userId\": int,\n\n\"role\": string\n\n}"
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2Nlc3NfdXVpZCI6ImIyMmZiMWYzLTlkZDktNGFkYi05ZmE3LWYxMWUwMTAxNzg2YyIsImF1dGhvcml6ZWQiOnRydWUsImV4cCI6MTY0MTM3MTIwMSwicm9sZSI6ImVtcGxveWVlIiwidXNlcl9pZCI6NH0.Pu-K89BWmApnsxD3wEh0SFthY_arD7RUeuu3JLCFc2I",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/refresh",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"refresh"
							]
						},
						"description": "Creates new access and refresh tokens and sends them back by header(access) and cookie(refresh). Needed valid refresh token\n\n### Request data:\n\nCookie: Refresh-Token\n\n### Response data:\n\n401 - StatusUnauthorized  \n422 - StatusUnprocessableEntity\n\n402 - StatusOK\n\nCookie: Refresh-Token\n\nHeader: access_token"
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cdCI6IkpXVCJ9.eyJhY2Nlc3NfdXVpZCI6IjliNTYyZTAyLWM4YmMtNDBmNi04YWRhLTBjNmE0ZTVjNTkwMyIsImF1dGhvcml6ZWQiOnRydWUsImV4cCI6MTY0MTgzODI0Mywicm9sZSI6ImVtcGxveWVlIiwidXNlcl9pZCI6NH0.Lt_dsynGjTPEPYu2GY9Yr1YQ3kqlga_0yVYAywSvdjs",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/logout",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"logout"
							]
						},
						"description": "### Request data:\n\nAuthorization Bearer Token\n\n### Response data:\n\n401 - StatusUnauthorized  \n  \n200 - StatusOK\n\nCookie: Refresh-Token - null\n\nHeader: access_token - null"
					},
					"response": []
				}
			]
		}
	]
}