version: '3.9'

services:
    postgresql_database:
        container_name: postgresql_database
        image: postgres:latest
        env_file:
            - .env
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_HOST=${POSTGRES_HOST}
            - POSTGRES_SSLMODE=${POSTGRES_SSLMODE}
        ports:
            - "8081:5432"
        restart: always
        volumes:
            - database-data:/var/lib/postgresql/data/
        networks:
            new:
                aliases:
                    - database

    test_postgresql_database:
        container_name: test_postgresql_database
        image: postgres:latest
        env_file:
            - .env
        environment:
            - POSTGRES_USER=${TEST_POSTGRES_USER}
            - POSTGRES_PASSWORD=${TEST_POSTGRES_PASSWORD}
            - POSTGRES_DB=${TEST_POSTGRES_DB}
            - POSTGRES_HOST=${TEST_POSTGRES_HOST}
            - POSTGRES_SSLMODE=${TEST_POSTGRES_SSLMODE}
        ports:
            - "8082:5434"
        restart: always
        volumes:
            - database-data:/var/lib/test_postgresql/data/
        networks:
            - new

    pgadmin:
        image: dpage/pgadmin4
        env_file:
            - .env
        environment:
            - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
            - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
        ports:
            - "5050:80"
        restart: always
        volumes:
            - pgadmin:/root/.pgadmin
        networks:
            - new

    rabbitmq:
        image: rabbitmq:3-management
        ports:
            - '4369:4369'
            - '5551:5551'
            - '5552:5552'
            - '5675:5672'
            - '25672:25672'
            - '15672:15672'
        environment:
            - RABBITMQ_SECURE_PASSWORD=yes
            - RABBITMQ_PASSWORD=my_password
        volumes:
            - rabbitmq_data:/bitnami/rabbitmq/mnesia
        networks:
            - new

    goreact:
        build:
            context: ./api
        ports:
            - "8080:8080"
        depends_on:
            - postgresql_database
        env_file:
            - .env
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB}
            - SERVER_HOST=0.0.0.0
            - ENV=prod
        tty: true
        networks:
            - new

    migrate:
        container_name: migrates
        image: "migrate/migrate:v4.4.0"
        depends_on:
            - postgresql_database
        volumes:
            - "../migrations:/api/migrations"
        command:
            [
                "-path",
                "/api/migrations/",
                "-database",
                "postgres://postgresql_database/goreact?sslmode=disable&user=user&password=userpass",
                "up"
            ]
        links:
            - postgresql_database
        networks:
            - new

networks:
    new:
        driver: bridge
volumes:
    database-data: null
    pgadmin: null
    rabbitmq_data:
        driver: local
